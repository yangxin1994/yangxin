// Generated by CoffeeScript 1.6.3
$(function() {
  var get_color, highlight, map_chart, pie_chart, recolor;
  get_color = function(d) {
    var color, count, users;
    users = gon.analyze_result.registered_users;
    count = users["" + d.id] ? users["" + d.id].count.toNumber() : -1;
    if (count <= 0) {
      color = "#ccc";
    } else if (count < 10) {
      color = "#56429b";
    } else if (count < 100) {
      color = "#2f7fb8";
    } else if (count < 300) {
      color = "#61c09f";
    } else if (count < 500) {
      color = "#a7dd9e";
    } else if (count < 800) {
      color = "#e4f791";
    } else if (count < 1000) {
      color = "#f5fca4";
    } else if (count < 1500) {
      color = "#fddf84";
    } else if (count < 2000) {
      color = "#fba959";
    } else if (count < 5000) {
      color = "#f0623c";
    } else if (count < 1000) {
      color = "#cf3047";
    } else if (count >= 10000) {
      color = "#95003b";
    } else {
      color = "#ccc";
    }
    return "fill: " + color;
  };
  highlight = function(selection, color) {
    var $this;
    if (color == null) {
      color = '#fff';
    }
    $this = $(selection);
    return d3.select(selection).attr("data-style", $this.attr("style")).attr("style", "fill: " + color);
  };
  recolor = function(selection) {
    var $this;
    $this = $(selection);
    return d3.select(selection).attr("style", $this.data("style"));
  };
  map_chart = function() {
    var height, path, places, projection, provinces, svg, width;
    width = 800;
    height = 548;
    projection = d3.geo.conicConformal().rotate([240, 0]).center([-10, 38]).parallels([29.5, 45.5]).scale(800).translate([width / 2, height / 2]).precision(.1);
    path = d3.geo.path().projection(projection);
    svg = d3.select("#canvas").insert("svg", "h2").attr("width", width).attr("height", height);
    provinces = svg.append("g").attr("id", "provinces");
    places = svg.append("g").attr("id", "places");
    return d3.json("/assets/pages/admin/statistics/cn-provinces.json", function(collection) {
      provinces.selectAll("path").data(collection.features).enter().append("path").attr("d", path).attr("class", function(d) {
        return "province p_" + d.id;
      }).attr("data-name", function(d) {
        return d.properties.name;
      }).attr("style", function(d) {
        return get_color(d);
      }).on('mouseover', function() {
        return highlight(this, "#f2f2f2");
      }).on("mouseout", function() {
        return recolor(this);
      });
      return places.selectAll("path").data(collection.features).enter().append("text").attr("class", "place-label").attr("dy", ".35em").attr("transform", function(d) {
        return "translate(" + (path.centroid(d)) + ")";
      }).text(function(d) {
        return d.properties.name;
      });
    });
  };
  pie_chart = function() {
    var arc, color, data, g, height, pie, radius, svg, width;
    width = 700;
    height = 500;
    radius = Math.min(width, height) / 2;
    color = d3.scale.ordinal().range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);
    arc = d3.svg.arc().outerRadius(radius - 10).innerRadius(0);
    pie = d3.layout.pie().sort(null).value(function(d) {
      return d.population;
    });
    svg = d3.select("#canvas").insert("svg", "h2").attr("width", width).attr("height", height).append("g").attr("transform", "translate(" + (width / 2) + "," + (height / 2) + ")");
    d3.csv("/assets/pages/admin/statistics/data.csv", function(error, data) {
      var d, _i, _len;
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        d = data[_i];
        d.population = +d.population;
      }
      return console.log(data);
    });
    data = [];
    g = svg.selectAll(".arc").data(pie(data)).enter().append("g").attr("class", "arc");
    g.append("path").attr("d", arc).style("fill", function(d) {
      return color(d.data.age);
    });
    return g.append("text").attr("transform", function(d) {
      return "translate(" + (arc.centroid(d)) + ")";
    }).attr("dy", ".35em").style("text-anchor", "middle").text(function(d) {
      return d.data.age;
    });
  };
  return pie_chart();
});
